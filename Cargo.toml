[package]
name = "tetsy-scale-codec"
description = "SCALE - Simple Concatenating Aggregated Little Endians"
version = "1.0.3"
authors = ["Parity Technologies <admin@parity.io>"]
license = "Apache-2.0"
repository = "https://github.com/tetcoin/tetsy-scale-codec"
categories = ["encoding"]
edition = "2018"

[dependencies]
arrayvec = { version = "0.4", default-features = false, features = ["array-sizes-33-128", "array-sizes-129-255"] }
serde = { version = "1.0", optional = true }
tetsy-scale-codec-derive = { path = "derive", version = "^1.0.2", default-features = false, optional = true }
bitvec = { version = "0.17.4", default-features = false, features = ["alloc"], optional = true }
byte-slice-cast = { version = "0.3.2", default-features = false, optional = true }
generic-array = { version = "0.12", optional = true }
vecarray = { version = "0.1", default-features = false, optional = true }
typenum = { version = "1.10", optional = true }

[dev-dependencies]
serde_derive = { version = "1.0" }
tetsy-scale-codec-derive = { path = "derive", version = "^1.0.2", default-features = false }
criterion = "0.2"
bitvec = "0.17.4"

[[bench]]
name = "benches"
harness = false

[lib]
bench = false

[features]
default = ["std"]
derive = ["tetsy-scale-codec-derive"]
std = ["serde", "bitvec/std", "byte-slice-cast/std", "vecarray/std"]
bit-vec = ["bitvec", "byte-slice-cast"]
vec-array = ["vecarray", "typenum"]

# WARNING: DO _NOT_ USE THIS FEATURE IF YOU ARE WORKING ON CONSENSUS CODE!*
#
# Provides implementations for more data structures than just Vec and Box.
# Concretely it will provide tetsy-scale-codec implementations for many types
# that can be found in std and/or alloc.
full = []

[workspace]
members = [
	"derive",
	"fuzzer",
]
